def C [p | t | k | b | d | g | s | z | f | v | l | m | n | ʃ | ʒ | ŋ ];
def V [a | e | i | o | u];

read lexc kaixo.lexc
eliminate flags
def Lex;

# phonology

def Ng n -> ŋ || ?* _ k ;

def PhonE E -> o || ?*[{oŋ}|o]k _ ?* ;
def PhonI I -> u || ?*[{on}|o]t _ ?* ;
def PhonIrr PhonE .o. PhonI;
def PhonNom E -> e , I -> i;

def Phon PhonIrr .o. PhonNom .o. Ng;

# iterative

def Atomic [C* V+];
def Crop Atomic @-> %< ... %> || "[ITERATIVE]" _ ?*;
def IterativeLex Lex .o. Crop;

def ReplaceIter "[ITERATIVE]" -> %< Atomic %>;

def Duplicate _eq( [IterativeLex .o. ReplaceIter] , %< , %>) .o. [%>|%<] -> 0;

regex Duplicate .o. Phon;